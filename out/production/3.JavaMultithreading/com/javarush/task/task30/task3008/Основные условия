
I
1) Server - основной класс сервера.
2) MessageType - enum, который отвечает за тип сообщений пересылаемых между
клиентом и сервером.
3) Message - класс, отвечающий за пересылаемые сообщения.
4) Connection - класс соединения между клиентом и сервером.
5) ConsoleHelper - вспомогательный класс, для чтения или записи в консоль.
6) Handler - (вложенный класс) поток, в котором будет происходить обмен сообщениями с клиентом.

III
Сформулируем основные моменты протокола:
- Когда новый клиент хочет подсоединиться к серверу, сервер должен запросить имя
клиента.
- Когда клиент получает запрос имени от сервера он должен отправить свое имя серверу.
- Когда сервер получает имя клиента он должен принять это имя или запросить новое.
- Когда новый клиент добавился к чату, сервер должен сообщить остальным участникам о
новом клиенте.
- Когда клиент покидает чат, сервер должен сообщить остальным участникам об этом.
- Когда сервер получает текстовое сообщение от клиента, он должен переслать его всем
остальным участникам чата.

1) NAME_REQUEST - запрос имени.
2) USER_NAME - имя пользователя.
3) NAME_ACCEPTED - имя принято.
4) TEXT - текстовое сообщение.
5) USER_ADDED - пользователь добавлен.
6) USER_REMOVED - пользователь удален.

VI
Приступим к самому важному - написанию класса Server. Сервер должен поддерживать
множество соединений с разными клиентами одновременно. Это можно реализовать с
помощью следующего алгоритма:

- Сервер создает серверное сокетное соединение.
- В цикле ожидает, когда какой-то клиент подключится к сокету.
- Создает новый поток обработчик Handler, в котором будет происходить обмен сообщениями с клиентом.
- Ожидает следующее соединение.