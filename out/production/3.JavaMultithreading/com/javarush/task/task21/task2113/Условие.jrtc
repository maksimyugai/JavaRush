<div class="wdghtml" taskKey="com.javarush.task.task21.task2113.big16">
<h3>Ипподром(16)</h3>
<p>Теперь уже точно все.</p>
<p>Добавь вызов метода printWinner в конец метода main.</p>
<p>Запускай и любуйся своей первой компьютерной игрой :)</p>

<hr>
<h3>Ипподром(15)</h3>
<p>Добавим определение победителя.<br />
В классе <span class="text-corporate"><strong>Hippodrome</strong></span> сделаем два метода:<br />
<mark>public Horse getWinner()</mark> и <mark>public void printWinner()</mark></p>
<p>Метод <mark>getWinner</mark> должен возвращать лошадь пробежавшую самую большую дистанцию.<br />
Метод <mark>printWinner</mark> выводит на экран имя победителя в виде: <em><strong>Winner is </strong></em><strong><span class="text-user">&lt;name&gt;</span></strong><em><strong>!</strong></em></p>
<p><strong>Пример:</strong><br />
<code>Winner is Lucky!</code></p>

<hr>
<h3>Ипподром(14)</h3>
<p>Запускаем и любуемся.<br />
У нас каждые полсекунды отображается <strong>новый кадр</strong> с ситуацией на ипподроме.<br />
Мышкой уменьши размер консоли так, чтобы был виден только один &#171;<em><strong>кадр</strong></em>&#187; и на том же самом месте.</p>
<p><strong>Тогда можно наблюдать забег в живую и даже покомментировать:</strong><br />
<em>&#8212; Старт.</em><br />
<em> &#8212; Гомер неожиданно обходит Лаки.</em><br />
<em> &#8212; Слевин вырывается вперед.</em><br />
<em> &#8212; Вперед Лаки!</em><br />
<em> &#8212; 10 баксов на Слевина.</em><br />
<em> &#8212; Похоже Лаки сбросил жокея и расслабился.</em><br />
<em> &#8212; Гомер уверенно вырывается вперед.</em><br />
<em> &#8212; Неожиданно для всех побеждает Гомер. Вот это номер!</em></p>

<hr>
<h3>Ипподром(13)</h3>
<p>Теперь вернемся к методу <mark>print</mark> класса <span class="text-corporate"><strong>Horse</strong></span>.</p>
<p>Т.к. мы работаем с консолью, то все лошади на бегах будут выглядеть примерно так:<br />
<code>........Sleven &lt;- лошадь Слевин<br />
....Lucky &lt;- лошадь Лаки<br />
..........Gomer &lt;- лошадь Гомер</code></p>
<p>Другими словами, в методе <mark>print</mark> надо вывести на экран строку состоящую из точек и имени лошади.<br />
Количество точек равно <mark class="user">distance</mark>, округленному (<em>в меньшую сторону</em>) до <strong>целого числа</strong>.</p>

<hr>
<h3>Ипподром(12)</h3>
<p>Осталось совсем немного &#8212; дописать класс <span class="text-corporate"><strong>Horse</strong></span>.<br />
Каждый ход у лошади будет вызываться метод <mark>move</mark>.<br />
Когда у лошади вызывают метод <mark>move</mark>, лошадь должна пробежать некоторую дистанцию.<br />
Дистанция зависит от скорости лошади (<mark class="user">speed</mark>). В самом простом варианте, выглядеть этот метод должен примерно так:<br />
<span class="text-neon">distance += speed;</span></p>
<p>Но, чтобы было интереснее, давай сделаем так, чтобы скорость все время немного менялась.<br />
Для этого умножь <mark class="user">speed</mark> на случайное число.<br />
Случайное число можно получить с помощью метода <mark>Math.random()</mark>.</p>

<hr>
<h3>Ипподром(11)</h3>
<p>С классом <span class="text-corporate"><strong>Hippodrome</strong></span> почти закончили.<br />
Добавь в конец метода <mark>main</mark> вызов <mark>run()</mark>.</p>
<p><strong>Подсказка:</strong><br />
<mark>run()</mark> <em>&#8212; это нестатический метод, поэтому вызвать его можно только у объекта.</em><br />
<em>А где взять объект?</em></p>
<p><strong>Подсказка 2:</strong><br />
<mark>game.run();</mark></p>

<hr>
<h3>Ипподром(10)</h3>
<p>Еще нужно написать метод <mark>print</mark> класса <span class="text-corporate"><strong>Hippodrome</strong></span>.<br />
В нем тоже все просто: в цикле для каждой лошади вызываем ее метод <mark><strong>print</strong></mark>.<br />
Ну, и еще выведи после цикла <span class="text-user"><strong>10</strong></span> пустых строк: <mark>System.out.println()</mark> &#8212; чтобы было красивее.</p>

<hr>
<h3>Ипподром(9)</h3>
<p>Теперь вернемся к методам move и print. Начнем с move.</p>
<p>В методе move класса Hippodrome в цикле у каждой лошади мы вызываем метод move.</p>
<p></p>
<p>Да ты прав, его еще нет у класса Horse.</p>
<p>Поэтому в класс Horse надо добавить свой метод move :)</p>
<p>И метод print, кстати тоже.</p>
<p>Если я не говорю ничего насчет параметров метода, значит метод без параметров.</p>
<p>Делай все методы public, если явно не указано обратное.</p>

<hr>
<h3>Ипподром(8)</h3>
<p>В методе <mark>run</mark> сделай цикл от <span class="text-user"><strong>1</strong></span> до <strong><span class="text-user">100</span></strong>. Это и будет наш забег.<br />
В теле цикла вызываем сначала <mark>move</mark>, затем <mark>print</mark>.<br />
Чтобы весь цикл не отработал за долю секунды &#8212; добавь в него еще <mark>Thread.sleep(<strong>200</strong>)</mark>;</p>

<hr>
<h3>Ипподром(7)</h3>
<p>Но и это еще не все &#8212; надо чтобы лошади бежали.<br />
Добавь в класс <strong><span class="text-corporate">Hippodrome</span></strong> методы <mark>run</mark>, <mark>move</mark> и <mark>print</mark>. Без параметров.<br />
Метод <mark>move</mark> будет управлять движением всех лошадей.<br />
Метод <mark>print</mark> отрисовывать их на экран.<br />
А метод <mark>run</mark> &#8212; управлять всем этим.</p>

<hr>
<h3>Ипподром(6)</h3>
<p>Теперь перейдем к классу <strong><span class="text-corporate">Hippodrome</span></strong> и методу <mark>main</mark>.<br />
Нам нужно создать объект типа <mark class="green">Hippodrome</mark> и добавить ему несколько лошадей.</p>
<p>Для начала, в классе <strong><span class="text-corporate">Hippodrome</span></strong>:<br />
Создай статическое поле <mark class="user">game</mark> типа <strong><span class="text-corporate">Hippodrome</span></strong>.</p>
<p>В методе <mark>main</mark> требуется:<br />
а) Создать объект типа <strong><span class="text-corporate">Hippodrome</span></strong> и сохранить его в поле <mark class="user">game</mark>.<br />
б) Создать три объекта &#171;<em><strong>лошадь</strong></em>&#171;. Имена придумай сам. Начальные скорость у всех лошадей &#8212; <span class="text-user"><strong>3</strong></span>, дистанция &#8212; <span class="text-user"><strong>0</strong></span>.<br />
в) Добавить созданных лошадей в список лошадей ипподрома (<strong>horses</strong>). Получить список лошадей ипподрома можно с помощью метода <mark>getHorses</mark>.</p>

<hr>
<h3>Ипподром(5)</h3>
<p>Закончим написание класса лошадь (<strong><span class="text-corporate">Horse</span></strong>).<br />
Добавь конструктор с параметрами (<mark class="user">name</mark>, <mark class="user">speed</mark>, <mark class="user">distance</mark>).<br />
Добавь <strong><span class="text-user">getter&#8217;ы</span></strong> и <strong><span class="text-user">setter&#8217;ы</span></strong> для всех полей класса <strong><span class="text-corporate">Horse</span></strong>.<br />
Делай все методы <mark>public</mark>, если явно не указано обратное.</p>

<hr>
<h3>Ипподром(4)</h3>
<p>Теперь вернемся к лошадям. У каждой лошади на скачках должны быть известны имя (<strong>name</strong>) и скорость (<strong>speed</strong>).<br />
Наши лошади будут бежать просто определенное время (<span class="text-user"><strong>100</strong></span> <em><strong>секунд/&#187;шагов&#187;</strong></em>).<br />
Будем определять победителя, как лошадь, пробежавшую наибольшую дистанцию.<br />
Поэтому нам понадобится хранить еще и расстояние (<strong>distance</strong>), которое лошадь уже пробежала.<br />
Добавь в класс <strong><span class="text-corporate">Horse</span></strong> переменные <mark class="user">name</mark> (<span class="text-corporate">String</span>), <mark class="user">speed</mark> (<span class="text-corporate">double</span>), <mark class="user">distance</mark> (<span class="text-corporate">double</span>).</p>

<hr>
<h3>Ипподром(3)</h3>
<p>Несмотря на то что мы объявили переменную <mark class="user">horses</mark>, сам список еще не создан (если ты конечно не успел опередить нас).<br />
Создай конструктор класса <strong><span class="text-corporate">Hippodrome</span></strong> с одним параметром типа <strong><span class="text-red">List</span></strong>.<br />
Сохрани в поле <mark class="user">horses</mark> полученный в качестве параметра <strong>список</strong> (<em>инициализируй поле <strong>horses</strong></em>).</p>

<hr>
<h3>Ипподром(2)</h3>
<p>Раз это ипподром, то на нем должны быть лошади.<br />
Значит наш ипподром должен хранить список всех его лошадей.<br />
Добавь поле horses типа <span class="text-red"><strong>List</strong>&lt;Horse&gt;</span> в класс <span class="text-corporate"><strong>Hippodrome</strong></span>.<br />
А чтобы лошадей не украли &#8212; сделай это поле <strong>приватным</strong>.<br />
Добавь <strong><span class="text-user">getter</span></strong> для этого поля.</p>

<hr>
<h3>Ипподром(1)</h3>
<p>Сегодня мы напишем небольшую игру под названием &#171;<em><strong>Ипподром</strong></em>&#171;.<br />
Когда я говорю мы &#8212; я имею ввиду тебя. Я же буду работать наставником.</p>
<p>Для начала нам понадобятся классы &#171;<em><strong>ипподром</strong></em>&#187; и &#171;<em><strong>лошадь</strong></em>&#171;.<br />
Создай классы <span class="text-corporate"><strong>Hippodrome</strong></span> (<em><strong>ипподром</strong></em>), <strong><span class="text-corporate">Horse</span></strong> (<strong>лошадь</strong>).</p>
<p>Также не забудь, что любая программа начинается с метода main.<br />
Добавь его в класс <span class="text-corporate"><strong>Hippodrome</strong></span>.</p>

</div>
